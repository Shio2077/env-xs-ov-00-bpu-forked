// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ITTage(
  input          clock,
  input          reset,
  input  [40:0]  io_in_bits_s0_pc_3,
  input  [7:0]   io_in_bits_folded_hist_3_hist_14_folded_hist,
  input  [8:0]   io_in_bits_folded_hist_3_hist_13_folded_hist,
  input  [3:0]   io_in_bits_folded_hist_3_hist_12_folded_hist,
  input  [8:0]   io_in_bits_folded_hist_3_hist_10_folded_hist,
  input  [8:0]   io_in_bits_folded_hist_3_hist_6_folded_hist,
  input  [7:0]   io_in_bits_folded_hist_3_hist_4_folded_hist,
  input  [7:0]   io_in_bits_folded_hist_3_hist_3_folded_hist,
  input  [7:0]   io_in_bits_folded_hist_3_hist_2_folded_hist,
  input          io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_0_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_0_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_0_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_0_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_0_offsets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_0_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_0_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_0_hit,
  input          io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_1_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_1_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_1_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_1_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_1_offsets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_1_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_1_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_1_hit,
  input          io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_2_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_2_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_2_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_2_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_2_offsets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_2_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_jalr,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_call,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_ret,
  input          io_in_bits_resp_in_0_s2_full_pred_2_last_may_be_rvi_call,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_2_hit,
  input          io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_3_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_3_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_3_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_3_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_3_offsets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_3_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_3_fallThroughErr,
  input          io_in_bits_resp_in_0_s2_full_pred_3_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_3_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_0_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_0_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_0_jalr_target,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_0_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_0_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_0_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_0_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_1_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_1_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_1_jalr_target,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_1_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_1_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_1_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_1_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_2_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_2_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_2_jalr_target,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_2_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_2_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_jalr,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_call,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_ret,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_2_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_3_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_3_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_3_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s3_full_pred_3_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s3_full_pred_3_offsets_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_3_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_3_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_3_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_3_hit,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_valid,
  input  [3:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_offset,
  input  [11:0]  io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_lower,
  input  [1:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_tarStat,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_sharing,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_valid,
  input  [3:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_offset,
  input  [19:0]  io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_lower,
  input  [1:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_tarStat,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_sharing,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_valid,
  input  [3:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_pftAddr,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_carry,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_isCall,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_isRet,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_isJalr,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_last_may_be_rvi_call,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_0,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_1,
  output         io_out_s2_full_pred_0_br_taken_mask_0,
  output         io_out_s2_full_pred_0_br_taken_mask_1,
  output         io_out_s2_full_pred_0_slot_valids_0,
  output         io_out_s2_full_pred_0_slot_valids_1,
  output [40:0]  io_out_s2_full_pred_0_targets_0,
  output [40:0]  io_out_s2_full_pred_0_targets_1,
  output [40:0]  io_out_s2_full_pred_0_jalr_target,
  output [3:0]   io_out_s2_full_pred_0_offsets_0,
  output [3:0]   io_out_s2_full_pred_0_offsets_1,
  output [40:0]  io_out_s2_full_pred_0_fallThroughAddr,
  output         io_out_s2_full_pred_0_is_br_sharing,
  output         io_out_s2_full_pred_0_hit,
  output         io_out_s2_full_pred_1_br_taken_mask_0,
  output         io_out_s2_full_pred_1_br_taken_mask_1,
  output         io_out_s2_full_pred_1_slot_valids_0,
  output         io_out_s2_full_pred_1_slot_valids_1,
  output [40:0]  io_out_s2_full_pred_1_targets_0,
  output [40:0]  io_out_s2_full_pred_1_targets_1,
  output [40:0]  io_out_s2_full_pred_1_jalr_target,
  output [3:0]   io_out_s2_full_pred_1_offsets_0,
  output [3:0]   io_out_s2_full_pred_1_offsets_1,
  output [40:0]  io_out_s2_full_pred_1_fallThroughAddr,
  output         io_out_s2_full_pred_1_is_br_sharing,
  output         io_out_s2_full_pred_1_hit,
  output         io_out_s2_full_pred_2_br_taken_mask_0,
  output         io_out_s2_full_pred_2_br_taken_mask_1,
  output         io_out_s2_full_pred_2_slot_valids_0,
  output         io_out_s2_full_pred_2_slot_valids_1,
  output [40:0]  io_out_s2_full_pred_2_targets_0,
  output [40:0]  io_out_s2_full_pred_2_targets_1,
  output [40:0]  io_out_s2_full_pred_2_jalr_target,
  output [3:0]   io_out_s2_full_pred_2_offsets_0,
  output [3:0]   io_out_s2_full_pred_2_offsets_1,
  output [40:0]  io_out_s2_full_pred_2_fallThroughAddr,
  output         io_out_s2_full_pred_2_is_jalr,
  output         io_out_s2_full_pred_2_is_call,
  output         io_out_s2_full_pred_2_is_ret,
  output         io_out_s2_full_pred_2_last_may_be_rvi_call,
  output         io_out_s2_full_pred_2_is_br_sharing,
  output         io_out_s2_full_pred_2_hit,
  output         io_out_s2_full_pred_3_br_taken_mask_0,
  output         io_out_s2_full_pred_3_br_taken_mask_1,
  output         io_out_s2_full_pred_3_slot_valids_0,
  output         io_out_s2_full_pred_3_slot_valids_1,
  output [40:0]  io_out_s2_full_pred_3_targets_0,
  output [40:0]  io_out_s2_full_pred_3_targets_1,
  output [40:0]  io_out_s2_full_pred_3_jalr_target,
  output [3:0]   io_out_s2_full_pred_3_offsets_0,
  output [3:0]   io_out_s2_full_pred_3_offsets_1,
  output [40:0]  io_out_s2_full_pred_3_fallThroughAddr,
  output         io_out_s2_full_pred_3_fallThroughErr,
  output         io_out_s2_full_pred_3_is_br_sharing,
  output         io_out_s2_full_pred_3_hit,
  output         io_out_s3_full_pred_0_br_taken_mask_0,
  output         io_out_s3_full_pred_0_br_taken_mask_1,
  output         io_out_s3_full_pred_0_slot_valids_0,
  output         io_out_s3_full_pred_0_slot_valids_1,
  output [40:0]  io_out_s3_full_pred_0_targets_0,
  output [40:0]  io_out_s3_full_pred_0_targets_1,
  output [40:0]  io_out_s3_full_pred_0_jalr_target,
  output [40:0]  io_out_s3_full_pred_0_fallThroughAddr,
  output         io_out_s3_full_pred_0_fallThroughErr,
  output         io_out_s3_full_pred_0_is_br_sharing,
  output         io_out_s3_full_pred_0_hit,
  output         io_out_s3_full_pred_1_br_taken_mask_0,
  output         io_out_s3_full_pred_1_br_taken_mask_1,
  output         io_out_s3_full_pred_1_slot_valids_0,
  output         io_out_s3_full_pred_1_slot_valids_1,
  output [40:0]  io_out_s3_full_pred_1_targets_0,
  output [40:0]  io_out_s3_full_pred_1_targets_1,
  output [40:0]  io_out_s3_full_pred_1_jalr_target,
  output [40:0]  io_out_s3_full_pred_1_fallThroughAddr,
  output         io_out_s3_full_pred_1_fallThroughErr,
  output         io_out_s3_full_pred_1_is_br_sharing,
  output         io_out_s3_full_pred_1_hit,
  output         io_out_s3_full_pred_2_br_taken_mask_0,
  output         io_out_s3_full_pred_2_br_taken_mask_1,
  output         io_out_s3_full_pred_2_slot_valids_0,
  output         io_out_s3_full_pred_2_slot_valids_1,
  output [40:0]  io_out_s3_full_pred_2_targets_0,
  output [40:0]  io_out_s3_full_pred_2_targets_1,
  output [40:0]  io_out_s3_full_pred_2_jalr_target,
  output [40:0]  io_out_s3_full_pred_2_fallThroughAddr,
  output         io_out_s3_full_pred_2_fallThroughErr,
  output         io_out_s3_full_pred_2_is_jalr,
  output         io_out_s3_full_pred_2_is_call,
  output         io_out_s3_full_pred_2_is_ret,
  output         io_out_s3_full_pred_2_is_br_sharing,
  output         io_out_s3_full_pred_2_hit,
  output         io_out_s3_full_pred_3_br_taken_mask_0,
  output         io_out_s3_full_pred_3_br_taken_mask_1,
  output         io_out_s3_full_pred_3_slot_valids_0,
  output         io_out_s3_full_pred_3_slot_valids_1,
  output [40:0]  io_out_s3_full_pred_3_targets_0,
  output [40:0]  io_out_s3_full_pred_3_targets_1,
  output [40:0]  io_out_s3_full_pred_3_jalr_target,
  output [3:0]   io_out_s3_full_pred_3_offsets_0,
  output [3:0]   io_out_s3_full_pred_3_offsets_1,
  output [40:0]  io_out_s3_full_pred_3_fallThroughAddr,
  output         io_out_s3_full_pred_3_fallThroughErr,
  output         io_out_s3_full_pred_3_is_br_sharing,
  output         io_out_s3_full_pred_3_hit,
  output [222:0] io_out_last_stage_meta,
  output         io_out_last_stage_ftb_entry_valid,
  output [3:0]   io_out_last_stage_ftb_entry_brSlots_0_offset,
  output [11:0]  io_out_last_stage_ftb_entry_brSlots_0_lower,
  output [1:0]   io_out_last_stage_ftb_entry_brSlots_0_tarStat,
  output         io_out_last_stage_ftb_entry_brSlots_0_sharing,
  output         io_out_last_stage_ftb_entry_brSlots_0_valid,
  output [3:0]   io_out_last_stage_ftb_entry_tailSlot_offset,
  output [19:0]  io_out_last_stage_ftb_entry_tailSlot_lower,
  output [1:0]   io_out_last_stage_ftb_entry_tailSlot_tarStat,
  output         io_out_last_stage_ftb_entry_tailSlot_sharing,
  output         io_out_last_stage_ftb_entry_tailSlot_valid,
  output [3:0]   io_out_last_stage_ftb_entry_pftAddr,
  output         io_out_last_stage_ftb_entry_carry,
  output         io_out_last_stage_ftb_entry_isCall,
  output         io_out_last_stage_ftb_entry_isRet,
  output         io_out_last_stage_ftb_entry_isJalr,
  output         io_out_last_stage_ftb_entry_last_may_be_rvi_call,
  output         io_out_last_stage_ftb_entry_always_taken_0,
  output         io_out_last_stage_ftb_entry_always_taken_1,
  input          io_s0_fire_3,
  input          io_s1_fire_3,
  input          io_s2_fire_0,
  input          io_s2_fire_1,
  input          io_s2_fire_2,
  input          io_s2_fire_3,
  input          io_update_valid,
  input  [40:0]  io_update_bits_pc,
  input  [7:0]   io_update_bits_spec_info_folded_hist_hist_14_folded_hist,
  input  [8:0]   io_update_bits_spec_info_folded_hist_hist_13_folded_hist,
  input  [3:0]   io_update_bits_spec_info_folded_hist_hist_12_folded_hist,
  input  [8:0]   io_update_bits_spec_info_folded_hist_hist_10_folded_hist,
  input  [8:0]   io_update_bits_spec_info_folded_hist_hist_6_folded_hist,
  input  [7:0]   io_update_bits_spec_info_folded_hist_hist_4_folded_hist,
  input  [7:0]   io_update_bits_spec_info_folded_hist_hist_3_folded_hist,
  input  [7:0]   io_update_bits_spec_info_folded_hist_hist_2_folded_hist,
  input  [3:0]   io_update_bits_ftb_entry_tailSlot_offset,
  input          io_update_bits_ftb_entry_tailSlot_sharing,
  input          io_update_bits_ftb_entry_tailSlot_valid,
  input          io_update_bits_ftb_entry_isRet,
  input          io_update_bits_ftb_entry_isJalr,
  input          io_update_bits_cfi_idx_valid,
  input  [3:0]   io_update_bits_cfi_idx_bits,
  input          io_update_bits_jmp_taken,
  input          io_update_bits_mispred_mask_2,
  input  [222:0] io_update_bits_meta,
  input  [40:0]  io_update_bits_full_target
);

  reg  [2:0]  resp_meta_allocate_bits_r;
  reg         resp_meta_allocate_valid_r;
  wire        resp_meta_altDiffers;
  wire        _tables_4_io_resp_valid;
  wire [1:0]  _tables_4_io_resp_bits_ctr;
  wire [1:0]  _tables_4_io_resp_bits_u;
  wire [40:0] _tables_4_io_resp_bits_target;
  wire        _tables_3_io_resp_valid;
  wire [1:0]  _tables_3_io_resp_bits_ctr;
  wire [1:0]  _tables_3_io_resp_bits_u;
  wire [40:0] _tables_3_io_resp_bits_target;
  wire        _tables_2_io_resp_valid;
  wire [1:0]  _tables_2_io_resp_bits_ctr;
  wire [1:0]  _tables_2_io_resp_bits_u;
  wire [40:0] _tables_2_io_resp_bits_target;
  wire        _tables_1_io_resp_valid;
  wire [1:0]  _tables_1_io_resp_bits_ctr;
  wire [1:0]  _tables_1_io_resp_bits_u;
  wire [40:0] _tables_1_io_resp_bits_target;
  wire        _tables_0_io_resp_valid;
  wire [1:0]  _tables_0_io_resp_bits_ctr;
  wire [1:0]  _tables_0_io_resp_bits_u;
  wire [40:0] _tables_0_io_resp_bits_target;
  reg  [7:0]  tickCtr;
  reg         s2_resps_0_valid;
  reg  [1:0]  s2_resps_0_bits_ctr;
  reg  [1:0]  s2_resps_0_bits_u;
  reg  [40:0] s2_resps_0_bits_target;
  reg         s2_resps_1_valid;
  reg  [1:0]  s2_resps_1_bits_ctr;
  reg  [1:0]  s2_resps_1_bits_u;
  reg  [40:0] s2_resps_1_bits_target;
  reg         s2_resps_2_valid;
  reg  [1:0]  s2_resps_2_bits_ctr;
  reg  [1:0]  s2_resps_2_bits_u;
  reg  [40:0] s2_resps_2_bits_target;
  reg         s2_resps_3_valid;
  reg  [1:0]  s2_resps_3_bits_ctr;
  reg  [1:0]  s2_resps_3_bits_u;
  reg  [40:0] s2_resps_3_bits_target;
  reg         s2_resps_4_valid;
  reg  [1:0]  s2_resps_4_bits_ctr;
  reg  [1:0]  s2_resps_4_bits_u;
  reg  [40:0] s2_resps_4_bits_target;
  reg         s3_tageTaken_dup_0;
  reg         s3_tageTaken_dup_1;
  reg         s3_tageTaken_dup_2;
  reg         s3_tageTaken_dup_3;
  reg  [40:0] s3_tageTarget_dup_0;
  reg  [40:0] s3_tageTarget_dup_1;
  reg  [40:0] s3_tageTarget_dup_2;
  reg  [40:0] s3_tageTarget_dup_3;
  reg  [40:0] s3_providerTarget;
  reg  [40:0] s3_altProviderTarget;
  reg         s3_provided;
  reg  [2:0]  s3_provider;
  reg         s3_altProvided;
  reg  [2:0]  s3_altProvider;
  reg         s3_finalAltPred;
  reg         s3_providerU;
  reg  [1:0]  s3_providerCtr;
  reg  [1:0]  s3_altProviderCtr;
  wire        updateValid =
    io_update_bits_ftb_entry_tailSlot_valid & io_update_bits_ftb_entry_isJalr
    & ~(io_update_bits_ftb_entry_tailSlot_valid & io_update_bits_ftb_entry_isRet)
    & io_update_valid & ~io_update_bits_ftb_entry_tailSlot_sharing
    & io_update_bits_jmp_taken & io_update_bits_cfi_idx_valid
    & io_update_bits_cfi_idx_bits == io_update_bits_ftb_entry_tailSlot_offset;
  assign resp_meta_altDiffers = s3_finalAltPred != s3_tageTaken_dup_3;
  reg  [63:0] s2_allocLFSR_lfsr;
  wire        _GEN =
    updateValid & io_update_bits_mispred_mask_2
    & ~(io_update_bits_meta[100]
        & io_update_bits_meta[81:41] == io_update_bits_full_target
        & io_update_bits_meta[90:89] == 2'h0);
  reg         tables_0_io_update_valid_REG;
  reg         tables_0_io_update_reset_u_REG;
  reg         tables_0_io_update_correct_r;
  reg  [40:0] tables_0_io_update_target_r;
  reg  [40:0] tables_0_io_update_old_target_r;
  reg         tables_0_io_update_alloc_r;
  reg  [1:0]  tables_0_io_update_oldCtr_r;
  reg         tables_0_io_update_uValid_r;
  reg         tables_0_io_update_u_r;
  reg  [40:0] tables_0_io_update_pc_r;
  reg  [3:0]  tables_0_io_update_folded_hist_r_hist_12_folded_hist;
  reg         tables_1_io_update_valid_REG;
  reg         tables_1_io_update_reset_u_REG;
  reg         tables_1_io_update_correct_r;
  reg  [40:0] tables_1_io_update_target_r;
  reg  [40:0] tables_1_io_update_old_target_r;
  reg         tables_1_io_update_alloc_r;
  reg  [1:0]  tables_1_io_update_oldCtr_r;
  reg         tables_1_io_update_uValid_r;
  reg         tables_1_io_update_u_r;
  reg  [40:0] tables_1_io_update_pc_r;
  reg  [7:0]  tables_1_io_update_folded_hist_r_hist_14_folded_hist;
  reg         tables_2_io_update_valid_REG;
  reg         tables_2_io_update_reset_u_REG;
  reg         tables_2_io_update_correct_r;
  reg  [40:0] tables_2_io_update_target_r;
  reg  [40:0] tables_2_io_update_old_target_r;
  reg         tables_2_io_update_alloc_r;
  reg  [1:0]  tables_2_io_update_oldCtr_r;
  reg         tables_2_io_update_uValid_r;
  reg         tables_2_io_update_u_r;
  reg  [40:0] tables_2_io_update_pc_r;
  reg  [8:0]  tables_2_io_update_folded_hist_r_hist_13_folded_hist;
  reg  [7:0]  tables_2_io_update_folded_hist_r_hist_4_folded_hist;
  reg         tables_3_io_update_valid_REG;
  reg         tables_3_io_update_reset_u_REG;
  reg         tables_3_io_update_correct_r;
  reg  [40:0] tables_3_io_update_target_r;
  reg  [40:0] tables_3_io_update_old_target_r;
  reg         tables_3_io_update_alloc_r;
  reg  [1:0]  tables_3_io_update_oldCtr_r;
  reg         tables_3_io_update_uValid_r;
  reg         tables_3_io_update_u_r;
  reg  [40:0] tables_3_io_update_pc_r;
  reg  [8:0]  tables_3_io_update_folded_hist_r_hist_6_folded_hist;
  reg  [7:0]  tables_3_io_update_folded_hist_r_hist_2_folded_hist;
  reg         tables_4_io_update_valid_REG;
  reg         tables_4_io_update_reset_u_REG;
  reg         tables_4_io_update_correct_r;
  reg  [40:0] tables_4_io_update_target_r;
  reg  [40:0] tables_4_io_update_old_target_r;
  reg         tables_4_io_update_alloc_r;
  reg  [1:0]  tables_4_io_update_oldCtr_r;
  reg         tables_4_io_update_uValid_r;
  reg         tables_4_io_update_u_r;
  reg  [40:0] tables_4_io_update_pc_r;
  reg  [8:0]  tables_4_io_update_folded_hist_r_hist_10_folded_hist;
  reg  [7:0]  tables_4_io_update_folded_hist_r_hist_3_folded_hist;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      tickCtr <= 8'h0;
      s2_allocLFSR_lfsr <= 64'h1234567887654321;
    end
    else begin
      if (&tickCtr)
        tickCtr <= 8'h0;
      else if (_GEN) begin
        if ((&tickCtr) & ~(io_update_bits_meta[86]))
          tickCtr <= 8'hFF;
        else if (tickCtr == 8'h0 & io_update_bits_meta[86])
          tickCtr <= 8'h0;
        else if (io_update_bits_meta[86])
          tickCtr <= 8'(tickCtr - 8'h1);
        else
          tickCtr <= 8'(tickCtr + 8'h1);
      end
      if (s2_allocLFSR_lfsr == 64'h0)
        s2_allocLFSR_lfsr <= 64'h1;
      else
        s2_allocLFSR_lfsr <=
          {s2_allocLFSR_lfsr[0] ^ s2_allocLFSR_lfsr[1] ^ s2_allocLFSR_lfsr[3]
             ^ s2_allocLFSR_lfsr[4],
           s2_allocLFSR_lfsr[63:1]};
    end
  end // always @(posedge, posedge)
  wire [2:0]  selectedInfo_res_1_first_tableIdx = {2'h0, s2_resps_1_valid};
  wire [2:0]  selectedInfo_res_2_first_tableIdx =
    s2_resps_2_valid ? 3'h2 : selectedInfo_res_1_first_tableIdx;
  wire        selectedInfo_res_hasOne = s2_resps_4_valid | s2_resps_3_valid;
  wire        selectedInfo_res_hasTwo = s2_resps_4_valid & s2_resps_3_valid;
  wire        selectedInfo_res_1_hasOne = s2_resps_1_valid | s2_resps_0_valid;
  wire [1:0]  selectedInfo_res_1_first_ctr =
    s2_resps_1_valid ? s2_resps_1_bits_ctr : s2_resps_0_bits_ctr;
  wire [40:0] selectedInfo_res_1_first_target =
    s2_resps_1_valid ? s2_resps_1_bits_target : s2_resps_0_bits_target;
  wire        selectedInfo_res_2_hasOne = s2_resps_2_valid | selectedInfo_res_1_hasOne;
  wire [1:0]  selectedInfo_res_2_first_ctr =
    s2_resps_2_valid ? s2_resps_2_bits_ctr : selectedInfo_res_1_first_ctr;
  wire [40:0] selectedInfo_res_2_first_target =
    s2_resps_2_valid ? s2_resps_2_bits_target : selectedInfo_res_1_first_target;
  wire        selectedInfo_hasOne = selectedInfo_res_hasOne | selectedInfo_res_2_hasOne;
  wire        selectedInfo_hasTwo =
    selectedInfo_res_hasTwo | s2_resps_1_valid & s2_resps_0_valid | s2_resps_2_valid
    & selectedInfo_res_1_hasOne | selectedInfo_res_hasOne & selectedInfo_res_2_hasOne;
  wire [1:0]  selectedInfo_first_ctr =
    selectedInfo_res_hasOne
      ? (s2_resps_4_valid ? s2_resps_4_bits_ctr : s2_resps_3_bits_ctr)
      : selectedInfo_res_2_first_ctr;
  wire [40:0] selectedInfo_first_target =
    selectedInfo_res_hasOne
      ? (s2_resps_4_valid ? s2_resps_4_bits_target : s2_resps_3_bits_target)
      : selectedInfo_res_2_first_target;
  wire        _selectedInfo_T_91 = selectedInfo_res_hasOne & ~selectedInfo_res_hasTwo;
  wire [40:0] selectedInfo_second_target =
    (selectedInfo_res_hasOne
       ? 41'h0
       : (s2_resps_2_valid
            ? 41'h0
            : (s2_resps_1_valid ? 41'h0 : s2_resps_0_bits_target)
              | (s2_resps_1_valid ? s2_resps_0_bits_target : 41'h0))
         | (s2_resps_2_valid ? selectedInfo_res_1_first_target : 41'h0))
    | (_selectedInfo_T_91 ? selectedInfo_res_2_first_target : 41'h0)
    | (selectedInfo_res_hasTwo
         ? (s2_resps_4_valid ? 41'h0 : s2_resps_3_bits_target)
           | (s2_resps_4_valid ? s2_resps_3_bits_target : 41'h0)
         : 41'h0);
  wire        providerNull = selectedInfo_first_ctr == 2'h0;
  wire        _s2_tageTarget_T = providerNull & selectedInfo_hasTwo;
  wire        _s2_tageTarget_T_3 = selectedInfo_hasTwo & providerNull;
  wire        _s2_tageTaken_T_9 =
    selectedInfo_hasOne & ~_s2_tageTarget_T | _s2_tageTarget_T_3 | ~selectedInfo_hasOne;
  wire [40:0] _s2_tageTarget_T_12 =
    (selectedInfo_hasOne & ~_s2_tageTarget_T ? selectedInfo_first_target : 41'h0)
    | (_s2_tageTarget_T_3 ? selectedInfo_second_target : 41'h0)
    | (~selectedInfo_hasOne | providerNull & ~selectedInfo_hasTwo
         ? io_in_bits_resp_in_0_s2_full_pred_3_jalr_target
         : 41'h0);
  wire        _GEN_0 =
    io_update_bits_meta[96] & io_update_bits_meta[90:89] == 2'h0
    & io_update_bits_mispred_mask_2;
  wire        _GEN_1 = io_update_bits_meta[99:97] == 3'h0;
  wire        _GEN_2 = updateValid & io_update_bits_meta[100];
  wire        _GEN_3 = io_update_bits_meta[99:97] == 3'h1;
  wire        _GEN_4 = io_update_bits_meta[99:97] == 3'h2;
  wire        _GEN_5 = io_update_bits_meta[99:97] == 3'h3;
  wire        _GEN_6 = io_update_bits_meta[99:97] == 3'h4;
  wire        _updateU_T_2 =
    io_update_bits_meta[92] ? ~io_update_bits_mispred_mask_2 : io_update_bits_meta[91];
  wire        _updateCorrect_T = io_update_bits_meta[81:41] == io_update_bits_full_target;
  wire        _GEN_7 = io_update_bits_meta[85:83] == 3'h0;
  wire        _GEN_8 = _GEN & io_update_bits_meta[86] & _GEN_7;
  wire        updateMask_0 =
    _GEN_8 | _GEN_2 & (_GEN_1 | _GEN_0 & io_update_bits_meta[95:93] == 3'h0);
  wire        _GEN_9 = io_update_bits_meta[85:83] == 3'h1;
  wire        _GEN_10 = _GEN & io_update_bits_meta[86] & _GEN_9;
  wire        updateMask_1 =
    _GEN_10 | _GEN_2 & (_GEN_3 | _GEN_0 & io_update_bits_meta[95:93] == 3'h1);
  wire        _GEN_11 = io_update_bits_meta[85:83] == 3'h2;
  wire        _GEN_12 = _GEN & io_update_bits_meta[86] & _GEN_11;
  wire        updateMask_2 =
    _GEN_12 | _GEN_2 & (_GEN_4 | _GEN_0 & io_update_bits_meta[95:93] == 3'h2);
  wire        _GEN_13 = io_update_bits_meta[85:83] == 3'h3;
  wire        _GEN_14 = _GEN & io_update_bits_meta[86] & _GEN_13;
  wire        updateMask_3 =
    _GEN_14 | _GEN_2 & (_GEN_5 | _GEN_0 & io_update_bits_meta[95:93] == 3'h3);
  wire        _GEN_15 = io_update_bits_meta[85:83] == 3'h4;
  wire        _GEN_16 = _GEN & io_update_bits_meta[86] & _GEN_15;
  wire        updateMask_4 =
    _GEN_16 | _GEN_2 & (_GEN_6 | _GEN_0 & io_update_bits_meta[95:93] == 3'h4);
  wire        _GEN_17 = _GEN & io_update_bits_meta[86];
  wire [2:0]  selectedInfo_first_tableIdx =
    selectedInfo_res_hasOne
      ? (s2_resps_4_valid ? 3'h4 : 3'h3)
      : selectedInfo_res_2_first_tableIdx;
  wire [1:0]  selectedInfo_second_ctr =
    (selectedInfo_res_hasOne
       ? 2'h0
       : (s2_resps_2_valid
            ? 2'h0
            : (s2_resps_1_valid ? 2'h0 : s2_resps_0_bits_ctr)
              | (s2_resps_1_valid ? s2_resps_0_bits_ctr : 2'h0))
         | (s2_resps_2_valid ? selectedInfo_res_1_first_ctr : 2'h0))
    | (_selectedInfo_T_91 ? selectedInfo_res_2_first_ctr : 2'h0)
    | (selectedInfo_res_hasTwo
         ? (s2_resps_4_valid ? 2'h0 : s2_resps_3_bits_ctr)
           | (s2_resps_4_valid ? s2_resps_3_bits_ctr : 2'h0)
         : 2'h0);
  wire [7:0]  _s2_allocatableSlots_T_17 = 8'h1 << selectedInfo_first_tableIdx;
  wire [4:0]  _GEN_18 = _s2_allocatableSlots_T_17[4:0] | _s2_allocatableSlots_T_17[5:1];
  wire [4:0]  _GEN_19 =
    ~({_GEN_18[4] | selectedInfo_first_tableIdx == 3'h6 | (&selectedInfo_first_tableIdx),
       _GEN_18[3:0] | _s2_allocatableSlots_T_17[5:2] | _s2_allocatableSlots_T_17[6:3]
         | _s2_allocatableSlots_T_17[7:4]} & {5{selectedInfo_hasOne}})
    & {~s2_resps_4_valid & s2_resps_4_bits_u == 2'h0,
       ~s2_resps_3_valid & s2_resps_3_bits_u == 2'h0,
       ~s2_resps_2_valid & s2_resps_2_bits_u == 2'h0,
       ~s2_resps_1_valid & s2_resps_1_bits_u == 2'h0,
       ~s2_resps_0_valid & s2_resps_0_bits_u == 2'h0};
  wire [4:0]  _GEN_20 = _GEN_19 & s2_allocLFSR_lfsr[4:0];
  wire [2:0]  s2_maskedEntry =
    _GEN_20[0]
      ? 3'h0
      : _GEN_20[1]
          ? 3'h1
          : _GEN_20[2] ? 3'h2 : _GEN_20[3] ? 3'h3 : _GEN_20[4] ? 3'h4 : 3'h7;
  wire [7:0]  _s2_allocEntry_T = {3'h0, _GEN_19} >> s2_maskedEntry;
  always @(posedge clock) begin
    if (io_s1_fire_3) begin
      s2_resps_0_valid <= _tables_0_io_resp_valid;
      s2_resps_0_bits_ctr <= _tables_0_io_resp_bits_ctr;
      s2_resps_0_bits_u <= _tables_0_io_resp_bits_u;
      s2_resps_0_bits_target <= _tables_0_io_resp_bits_target;
      s2_resps_1_valid <= _tables_1_io_resp_valid;
      s2_resps_1_bits_ctr <= _tables_1_io_resp_bits_ctr;
      s2_resps_1_bits_u <= _tables_1_io_resp_bits_u;
      s2_resps_1_bits_target <= _tables_1_io_resp_bits_target;
      s2_resps_2_valid <= _tables_2_io_resp_valid;
      s2_resps_2_bits_ctr <= _tables_2_io_resp_bits_ctr;
      s2_resps_2_bits_u <= _tables_2_io_resp_bits_u;
      s2_resps_2_bits_target <= _tables_2_io_resp_bits_target;
      s2_resps_3_valid <= _tables_3_io_resp_valid;
      s2_resps_3_bits_ctr <= _tables_3_io_resp_bits_ctr;
      s2_resps_3_bits_u <= _tables_3_io_resp_bits_u;
      s2_resps_3_bits_target <= _tables_3_io_resp_bits_target;
      s2_resps_4_valid <= _tables_4_io_resp_valid;
      s2_resps_4_bits_ctr <= _tables_4_io_resp_bits_ctr;
      s2_resps_4_bits_u <= _tables_4_io_resp_bits_u;
      s2_resps_4_bits_target <= _tables_4_io_resp_bits_target;
    end
    if (io_s2_fire_0) begin
      s3_tageTaken_dup_0 <= _s2_tageTaken_T_9;
      s3_tageTarget_dup_0 <= _s2_tageTarget_T_12;
    end
    if (io_s2_fire_1) begin
      s3_tageTaken_dup_1 <= _s2_tageTaken_T_9;
      s3_tageTarget_dup_1 <= _s2_tageTarget_T_12;
    end
    if (io_s2_fire_2) begin
      s3_tageTaken_dup_2 <= _s2_tageTaken_T_9;
      s3_tageTarget_dup_2 <= _s2_tageTarget_T_12;
    end
    if (io_s2_fire_3) begin
      s3_tageTaken_dup_3 <= _s2_tageTaken_T_9;
      s3_tageTarget_dup_3 <= _s2_tageTarget_T_12;
      s3_providerTarget <= selectedInfo_first_target;
      s3_altProviderTarget <= selectedInfo_second_target;
      s3_provided <= selectedInfo_hasOne;
      s3_provider <= selectedInfo_first_tableIdx;
      s3_altProvided <= selectedInfo_hasTwo;
      s3_altProvider <=
        (selectedInfo_res_hasOne | ~s2_resps_2_valid
           ? 3'h0
           : selectedInfo_res_1_first_tableIdx)
        | (_selectedInfo_T_91 ? selectedInfo_res_2_first_tableIdx : 3'h0)
        | (selectedInfo_res_hasTwo
             ? (s2_resps_4_valid ? 3'h0 : 3'h3) | (s2_resps_4_valid ? 3'h3 : 3'h0)
             : 3'h0);
      s3_finalAltPred <= ~selectedInfo_hasTwo | selectedInfo_second_ctr[1];
      s3_providerU <=
        selectedInfo_res_hasOne
          ? (s2_resps_4_valid ? s2_resps_4_bits_u[0] : s2_resps_3_bits_u[0])
          : s2_resps_2_valid
              ? s2_resps_2_bits_u[0]
              : s2_resps_1_valid ? s2_resps_1_bits_u[0] : s2_resps_0_bits_u[0];
      s3_providerCtr <= selectedInfo_first_ctr;
      s3_altProviderCtr <= selectedInfo_second_ctr;
      resp_meta_allocate_valid_r <= |_GEN_19;
      resp_meta_allocate_bits_r <=
        _s2_allocEntry_T[0]
          ? s2_maskedEntry
          : _GEN_19[0]
              ? 3'h0
              : _GEN_19[1]
                  ? 3'h1
                  : _GEN_19[2] ? 3'h2 : _GEN_19[3] ? 3'h3 : _GEN_19[4] ? 3'h4 : 3'h7;
    end
    tables_0_io_update_valid_REG <= updateMask_0;
    tables_0_io_update_reset_u_REG <= &tickCtr;
    if (updateMask_0) begin
      tables_0_io_update_correct_r <= _GEN_8 | _GEN_1 & _updateCorrect_T;
      tables_0_io_update_target_r <= io_update_bits_full_target;
      tables_0_io_update_old_target_r <=
        _GEN_1 ? io_update_bits_meta[81:41] : io_update_bits_meta[40:0];
      tables_0_io_update_alloc_r <= _GEN_17 & _GEN_7;
      tables_0_io_update_oldCtr_r <=
        _GEN_1 ? io_update_bits_meta[90:89] : io_update_bits_meta[88:87];
      tables_0_io_update_uValid_r <= _GEN_8 | _GEN_2 & _GEN_1;
      tables_0_io_update_u_r <= ~_GEN_8 & _updateU_T_2;
      tables_0_io_update_pc_r <= io_update_bits_pc;
      tables_0_io_update_folded_hist_r_hist_12_folded_hist <=
        io_update_bits_spec_info_folded_hist_hist_12_folded_hist;
    end
    tables_1_io_update_valid_REG <= updateMask_1;
    tables_1_io_update_reset_u_REG <= &tickCtr;
    if (updateMask_1) begin
      tables_1_io_update_correct_r <= _GEN_10 | _GEN_3 & _updateCorrect_T;
      tables_1_io_update_target_r <= io_update_bits_full_target;
      tables_1_io_update_old_target_r <=
        _GEN_3 ? io_update_bits_meta[81:41] : io_update_bits_meta[40:0];
      tables_1_io_update_alloc_r <= _GEN_17 & _GEN_9;
      tables_1_io_update_oldCtr_r <=
        _GEN_3 ? io_update_bits_meta[90:89] : io_update_bits_meta[88:87];
      tables_1_io_update_uValid_r <= _GEN_10 | _GEN_2 & _GEN_3;
      tables_1_io_update_u_r <= ~_GEN_10 & _updateU_T_2;
      tables_1_io_update_pc_r <= io_update_bits_pc;
      tables_1_io_update_folded_hist_r_hist_14_folded_hist <=
        io_update_bits_spec_info_folded_hist_hist_14_folded_hist;
    end
    tables_2_io_update_valid_REG <= updateMask_2;
    tables_2_io_update_reset_u_REG <= &tickCtr;
    if (updateMask_2) begin
      tables_2_io_update_correct_r <= _GEN_12 | _GEN_4 & _updateCorrect_T;
      tables_2_io_update_target_r <= io_update_bits_full_target;
      tables_2_io_update_old_target_r <=
        _GEN_4 ? io_update_bits_meta[81:41] : io_update_bits_meta[40:0];
      tables_2_io_update_alloc_r <= _GEN_17 & _GEN_11;
      tables_2_io_update_oldCtr_r <=
        _GEN_4 ? io_update_bits_meta[90:89] : io_update_bits_meta[88:87];
      tables_2_io_update_uValid_r <= _GEN_12 | _GEN_2 & _GEN_4;
      tables_2_io_update_u_r <= ~_GEN_12 & _updateU_T_2;
      tables_2_io_update_pc_r <= io_update_bits_pc;
      tables_2_io_update_folded_hist_r_hist_13_folded_hist <=
        io_update_bits_spec_info_folded_hist_hist_13_folded_hist;
      tables_2_io_update_folded_hist_r_hist_4_folded_hist <=
        io_update_bits_spec_info_folded_hist_hist_4_folded_hist;
    end
    tables_3_io_update_valid_REG <= updateMask_3;
    tables_3_io_update_reset_u_REG <= &tickCtr;
    if (updateMask_3) begin
      tables_3_io_update_correct_r <= _GEN_14 | _GEN_5 & _updateCorrect_T;
      tables_3_io_update_target_r <= io_update_bits_full_target;
      tables_3_io_update_old_target_r <=
        _GEN_5 ? io_update_bits_meta[81:41] : io_update_bits_meta[40:0];
      tables_3_io_update_alloc_r <= _GEN_17 & _GEN_13;
      tables_3_io_update_oldCtr_r <=
        _GEN_5 ? io_update_bits_meta[90:89] : io_update_bits_meta[88:87];
      tables_3_io_update_uValid_r <= _GEN_14 | _GEN_2 & _GEN_5;
      tables_3_io_update_u_r <= ~_GEN_14 & _updateU_T_2;
      tables_3_io_update_pc_r <= io_update_bits_pc;
      tables_3_io_update_folded_hist_r_hist_6_folded_hist <=
        io_update_bits_spec_info_folded_hist_hist_6_folded_hist;
      tables_3_io_update_folded_hist_r_hist_2_folded_hist <=
        io_update_bits_spec_info_folded_hist_hist_2_folded_hist;
    end
    tables_4_io_update_valid_REG <= updateMask_4;
    tables_4_io_update_reset_u_REG <= &tickCtr;
    if (updateMask_4) begin
      tables_4_io_update_correct_r <= _GEN_16 | _GEN_6 & _updateCorrect_T;
      tables_4_io_update_target_r <= io_update_bits_full_target;
      tables_4_io_update_old_target_r <=
        _GEN_6 ? io_update_bits_meta[81:41] : io_update_bits_meta[40:0];
      tables_4_io_update_alloc_r <= _GEN_17 & _GEN_15;
      tables_4_io_update_oldCtr_r <=
        _GEN_6 ? io_update_bits_meta[90:89] : io_update_bits_meta[88:87];
      tables_4_io_update_uValid_r <= _GEN_16 | _GEN_2 & _GEN_6;
      tables_4_io_update_u_r <= ~_GEN_16 & _updateU_T_2;
      tables_4_io_update_pc_r <= io_update_bits_pc;
      tables_4_io_update_folded_hist_r_hist_10_folded_hist <=
        io_update_bits_spec_info_folded_hist_hist_10_folded_hist;
      tables_4_io_update_folded_hist_r_hist_3_folded_hist <=
        io_update_bits_spec_info_folded_hist_hist_3_folded_hist;
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:79];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [6:0] i = 7'h0; i < 7'h50; i += 7'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        tickCtr = _RANDOM[7'hF][25:18];
        s2_resps_0_valid = _RANDOM[7'hF][26];
        s2_resps_0_bits_ctr = _RANDOM[7'hF][28:27];
        s2_resps_0_bits_u = _RANDOM[7'hF][30:29];
        s2_resps_0_bits_target = {_RANDOM[7'hF][31], _RANDOM[7'h10], _RANDOM[7'h11][7:0]};
        s2_resps_1_valid = _RANDOM[7'h11][8];
        s2_resps_1_bits_ctr = _RANDOM[7'h11][10:9];
        s2_resps_1_bits_u = _RANDOM[7'h11][12:11];
        s2_resps_1_bits_target = {_RANDOM[7'h11][31:13], _RANDOM[7'h12][21:0]};
        s2_resps_2_valid = _RANDOM[7'h12][22];
        s2_resps_2_bits_ctr = _RANDOM[7'h12][24:23];
        s2_resps_2_bits_u = _RANDOM[7'h12][26:25];
        s2_resps_2_bits_target =
          {_RANDOM[7'h12][31:27], _RANDOM[7'h13], _RANDOM[7'h14][3:0]};
        s2_resps_3_valid = _RANDOM[7'h14][4];
        s2_resps_3_bits_ctr = _RANDOM[7'h14][6:5];
        s2_resps_3_bits_u = _RANDOM[7'h14][8:7];
        s2_resps_3_bits_target = {_RANDOM[7'h14][31:9], _RANDOM[7'h15][17:0]};
        s2_resps_4_valid = _RANDOM[7'h15][18];
        s2_resps_4_bits_ctr = _RANDOM[7'h15][20:19];
        s2_resps_4_bits_u = _RANDOM[7'h15][22:21];
        s2_resps_4_bits_target = {_RANDOM[7'h15][31:23], _RANDOM[7'h16]};
        s3_tageTaken_dup_0 = _RANDOM[7'h1A][27];
        s3_tageTaken_dup_1 = _RANDOM[7'h1A][28];
        s3_tageTaken_dup_2 = _RANDOM[7'h1A][29];
        s3_tageTaken_dup_3 = _RANDOM[7'h1A][30];
        s3_tageTarget_dup_0 = {_RANDOM[7'h1A][31], _RANDOM[7'h1B], _RANDOM[7'h1C][7:0]};
        s3_tageTarget_dup_1 = {_RANDOM[7'h1C][31:8], _RANDOM[7'h1D][16:0]};
        s3_tageTarget_dup_2 = {_RANDOM[7'h1D][31:17], _RANDOM[7'h1E][25:0]};
        s3_tageTarget_dup_3 =
          {_RANDOM[7'h1E][31:26], _RANDOM[7'h1F], _RANDOM[7'h20][2:0]};
        s3_providerTarget = {_RANDOM[7'h20][31:3], _RANDOM[7'h21][11:0]};
        s3_altProviderTarget = {_RANDOM[7'h21][31:12], _RANDOM[7'h22][20:0]};
        s3_provided = _RANDOM[7'h22][21];
        s3_provider = _RANDOM[7'h22][24:22];
        s3_altProvided = _RANDOM[7'h22][25];
        s3_altProvider = _RANDOM[7'h22][28:26];
        s3_finalAltPred = _RANDOM[7'h22][29];
        s3_providerU = _RANDOM[7'h22][30];
        s3_providerCtr = {_RANDOM[7'h22][31], _RANDOM[7'h23][0]};
        s3_altProviderCtr = _RANDOM[7'h23][2:1];
        s2_allocLFSR_lfsr = {_RANDOM[7'h23][31:3], _RANDOM[7'h24], _RANDOM[7'h25][2:0]};
        resp_meta_allocate_valid_r = _RANDOM[7'h25][3];
        resp_meta_allocate_bits_r = _RANDOM[7'h25][6:4];
        tables_0_io_update_valid_REG = _RANDOM[7'h25][7];
        tables_0_io_update_reset_u_REG = _RANDOM[7'h25][8];
        tables_0_io_update_correct_r = _RANDOM[7'h25][9];
        tables_0_io_update_target_r = {_RANDOM[7'h25][31:10], _RANDOM[7'h26][18:0]};
        tables_0_io_update_old_target_r = {_RANDOM[7'h26][31:19], _RANDOM[7'h27][27:0]};
        tables_0_io_update_alloc_r = _RANDOM[7'h27][28];
        tables_0_io_update_oldCtr_r = _RANDOM[7'h27][30:29];
        tables_0_io_update_uValid_r = _RANDOM[7'h27][31];
        tables_0_io_update_u_r = _RANDOM[7'h28][0];
        tables_0_io_update_pc_r = {_RANDOM[7'h28][31:1], _RANDOM[7'h29][9:0]};
        tables_0_io_update_folded_hist_r_hist_12_folded_hist = _RANDOM[7'h2A][27:24];
        tables_1_io_update_valid_REG = _RANDOM[7'h2D][30];
        tables_1_io_update_reset_u_REG = _RANDOM[7'h2D][31];
        tables_1_io_update_correct_r = _RANDOM[7'h2E][0];
        tables_1_io_update_target_r = {_RANDOM[7'h2E][31:1], _RANDOM[7'h2F][9:0]};
        tables_1_io_update_old_target_r = {_RANDOM[7'h2F][31:10], _RANDOM[7'h30][18:0]};
        tables_1_io_update_alloc_r = _RANDOM[7'h30][19];
        tables_1_io_update_oldCtr_r = _RANDOM[7'h30][21:20];
        tables_1_io_update_uValid_r = _RANDOM[7'h30][22];
        tables_1_io_update_u_r = _RANDOM[7'h30][23];
        tables_1_io_update_pc_r =
          {_RANDOM[7'h30][31:24], _RANDOM[7'h31], _RANDOM[7'h32][0]};
        tables_1_io_update_folded_hist_r_hist_14_folded_hist =
          {_RANDOM[7'h32][31:30], _RANDOM[7'h33][5:0]};
        tables_2_io_update_valid_REG = _RANDOM[7'h36][21];
        tables_2_io_update_reset_u_REG = _RANDOM[7'h36][22];
        tables_2_io_update_correct_r = _RANDOM[7'h36][23];
        tables_2_io_update_target_r =
          {_RANDOM[7'h36][31:24], _RANDOM[7'h37], _RANDOM[7'h38][0]};
        tables_2_io_update_old_target_r = {_RANDOM[7'h38][31:1], _RANDOM[7'h39][9:0]};
        tables_2_io_update_alloc_r = _RANDOM[7'h39][10];
        tables_2_io_update_oldCtr_r = _RANDOM[7'h39][12:11];
        tables_2_io_update_uValid_r = _RANDOM[7'h39][13];
        tables_2_io_update_u_r = _RANDOM[7'h39][14];
        tables_2_io_update_pc_r = {_RANDOM[7'h39][31:15], _RANDOM[7'h3A][23:0]};
        tables_2_io_update_folded_hist_r_hist_13_folded_hist =
          {_RANDOM[7'h3B][31:29], _RANDOM[7'h3C][5:0]};
        tables_2_io_update_folded_hist_r_hist_4_folded_hist = _RANDOM[7'h3E][8:1];
        tables_3_io_update_valid_REG = _RANDOM[7'h3F][12];
        tables_3_io_update_reset_u_REG = _RANDOM[7'h3F][13];
        tables_3_io_update_correct_r = _RANDOM[7'h3F][14];
        tables_3_io_update_target_r = {_RANDOM[7'h3F][31:15], _RANDOM[7'h40][23:0]};
        tables_3_io_update_old_target_r =
          {_RANDOM[7'h40][31:24], _RANDOM[7'h41], _RANDOM[7'h42][0]};
        tables_3_io_update_alloc_r = _RANDOM[7'h42][1];
        tables_3_io_update_oldCtr_r = _RANDOM[7'h42][3:2];
        tables_3_io_update_uValid_r = _RANDOM[7'h42][4];
        tables_3_io_update_u_r = _RANDOM[7'h42][5];
        tables_3_io_update_pc_r = {_RANDOM[7'h42][31:6], _RANDOM[7'h43][14:0]};
        tables_3_io_update_folded_hist_r_hist_6_folded_hist = _RANDOM[7'h46][16:8];
        tables_3_io_update_folded_hist_r_hist_2_folded_hist = _RANDOM[7'h47][15:8];
        tables_4_io_update_valid_REG = _RANDOM[7'h48][3];
        tables_4_io_update_reset_u_REG = _RANDOM[7'h48][4];
        tables_4_io_update_correct_r = _RANDOM[7'h48][5];
        tables_4_io_update_target_r = {_RANDOM[7'h48][31:6], _RANDOM[7'h49][14:0]};
        tables_4_io_update_old_target_r = {_RANDOM[7'h49][31:15], _RANDOM[7'h4A][23:0]};
        tables_4_io_update_alloc_r = _RANDOM[7'h4A][24];
        tables_4_io_update_oldCtr_r = _RANDOM[7'h4A][26:25];
        tables_4_io_update_uValid_r = _RANDOM[7'h4A][27];
        tables_4_io_update_u_r = _RANDOM[7'h4A][28];
        tables_4_io_update_pc_r =
          {_RANDOM[7'h4A][31:29], _RANDOM[7'h4B], _RANDOM[7'h4C][5:0]};
        tables_4_io_update_folded_hist_r_hist_10_folded_hist = _RANDOM[7'h4E][8:0];
        tables_4_io_update_folded_hist_r_hist_3_folded_hist = _RANDOM[7'h4F][30:23];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        tickCtr = 8'h0;
        s2_allocLFSR_lfsr = 64'h1234567887654321;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ITTageTable tables_0 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_valid                                (io_s0_fire_3),
    .io_req_bits_pc                              (io_in_bits_s0_pc_3),
    .io_req_bits_folded_hist_hist_12_folded_hist
      (io_in_bits_folded_hist_3_hist_12_folded_hist),
    .io_resp_valid                               (_tables_0_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_0_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_0_io_resp_bits_u),
    .io_resp_bits_target                         (_tables_0_io_resp_bits_target),
    .io_update_pc                                (tables_0_io_update_pc_r),
    .io_update_folded_hist_hist_12_folded_hist
      (tables_0_io_update_folded_hist_r_hist_12_folded_hist),
    .io_update_valid                             (tables_0_io_update_valid_REG),
    .io_update_correct                           (tables_0_io_update_correct_r),
    .io_update_alloc                             (tables_0_io_update_alloc_r),
    .io_update_oldCtr                            (tables_0_io_update_oldCtr_r),
    .io_update_uValid                            (tables_0_io_update_uValid_r),
    .io_update_u                                 (tables_0_io_update_u_r),
    .io_update_reset_u                           (tables_0_io_update_reset_u_REG),
    .io_update_target                            (tables_0_io_update_target_r),
    .io_update_old_target                        (tables_0_io_update_old_target_r)
  );
  ITTageTable_1 tables_1 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_valid                                (io_s0_fire_3),
    .io_req_bits_pc                              (io_in_bits_s0_pc_3),
    .io_req_bits_folded_hist_hist_14_folded_hist
      (io_in_bits_folded_hist_3_hist_14_folded_hist),
    .io_resp_valid                               (_tables_1_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_1_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_1_io_resp_bits_u),
    .io_resp_bits_target                         (_tables_1_io_resp_bits_target),
    .io_update_pc                                (tables_1_io_update_pc_r),
    .io_update_folded_hist_hist_14_folded_hist
      (tables_1_io_update_folded_hist_r_hist_14_folded_hist),
    .io_update_valid                             (tables_1_io_update_valid_REG),
    .io_update_correct                           (tables_1_io_update_correct_r),
    .io_update_alloc                             (tables_1_io_update_alloc_r),
    .io_update_oldCtr                            (tables_1_io_update_oldCtr_r),
    .io_update_uValid                            (tables_1_io_update_uValid_r),
    .io_update_u                                 (tables_1_io_update_u_r),
    .io_update_reset_u                           (tables_1_io_update_reset_u_REG),
    .io_update_target                            (tables_1_io_update_target_r),
    .io_update_old_target                        (tables_1_io_update_old_target_r)
  );
  ITTageTable_2 tables_2 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_valid                                (io_s0_fire_3),
    .io_req_bits_pc                              (io_in_bits_s0_pc_3),
    .io_req_bits_folded_hist_hist_13_folded_hist
      (io_in_bits_folded_hist_3_hist_13_folded_hist),
    .io_req_bits_folded_hist_hist_4_folded_hist
      (io_in_bits_folded_hist_3_hist_4_folded_hist),
    .io_resp_valid                               (_tables_2_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_2_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_2_io_resp_bits_u),
    .io_resp_bits_target                         (_tables_2_io_resp_bits_target),
    .io_update_pc                                (tables_2_io_update_pc_r),
    .io_update_folded_hist_hist_13_folded_hist
      (tables_2_io_update_folded_hist_r_hist_13_folded_hist),
    .io_update_folded_hist_hist_4_folded_hist
      (tables_2_io_update_folded_hist_r_hist_4_folded_hist),
    .io_update_valid                             (tables_2_io_update_valid_REG),
    .io_update_correct                           (tables_2_io_update_correct_r),
    .io_update_alloc                             (tables_2_io_update_alloc_r),
    .io_update_oldCtr                            (tables_2_io_update_oldCtr_r),
    .io_update_uValid                            (tables_2_io_update_uValid_r),
    .io_update_u                                 (tables_2_io_update_u_r),
    .io_update_reset_u                           (tables_2_io_update_reset_u_REG),
    .io_update_target                            (tables_2_io_update_target_r),
    .io_update_old_target                        (tables_2_io_update_old_target_r)
  );
  ITTageTable_3 tables_3 (
    .clock                                      (clock),
    .reset                                      (reset),
    .io_req_valid                               (io_s0_fire_3),
    .io_req_bits_pc                             (io_in_bits_s0_pc_3),
    .io_req_bits_folded_hist_hist_6_folded_hist
      (io_in_bits_folded_hist_3_hist_6_folded_hist),
    .io_req_bits_folded_hist_hist_2_folded_hist
      (io_in_bits_folded_hist_3_hist_2_folded_hist),
    .io_resp_valid                              (_tables_3_io_resp_valid),
    .io_resp_bits_ctr                           (_tables_3_io_resp_bits_ctr),
    .io_resp_bits_u                             (_tables_3_io_resp_bits_u),
    .io_resp_bits_target                        (_tables_3_io_resp_bits_target),
    .io_update_pc                               (tables_3_io_update_pc_r),
    .io_update_folded_hist_hist_6_folded_hist
      (tables_3_io_update_folded_hist_r_hist_6_folded_hist),
    .io_update_folded_hist_hist_2_folded_hist
      (tables_3_io_update_folded_hist_r_hist_2_folded_hist),
    .io_update_valid                            (tables_3_io_update_valid_REG),
    .io_update_correct                          (tables_3_io_update_correct_r),
    .io_update_alloc                            (tables_3_io_update_alloc_r),
    .io_update_oldCtr                           (tables_3_io_update_oldCtr_r),
    .io_update_uValid                           (tables_3_io_update_uValid_r),
    .io_update_u                                (tables_3_io_update_u_r),
    .io_update_reset_u                          (tables_3_io_update_reset_u_REG),
    .io_update_target                           (tables_3_io_update_target_r),
    .io_update_old_target                       (tables_3_io_update_old_target_r)
  );
  ITTageTable_4 tables_4 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_valid                                (io_s0_fire_3),
    .io_req_bits_pc                              (io_in_bits_s0_pc_3),
    .io_req_bits_folded_hist_hist_10_folded_hist
      (io_in_bits_folded_hist_3_hist_10_folded_hist),
    .io_req_bits_folded_hist_hist_3_folded_hist
      (io_in_bits_folded_hist_3_hist_3_folded_hist),
    .io_resp_valid                               (_tables_4_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_4_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_4_io_resp_bits_u),
    .io_resp_bits_target                         (_tables_4_io_resp_bits_target),
    .io_update_pc                                (tables_4_io_update_pc_r),
    .io_update_folded_hist_hist_10_folded_hist
      (tables_4_io_update_folded_hist_r_hist_10_folded_hist),
    .io_update_folded_hist_hist_3_folded_hist
      (tables_4_io_update_folded_hist_r_hist_3_folded_hist),
    .io_update_valid                             (tables_4_io_update_valid_REG),
    .io_update_correct                           (tables_4_io_update_correct_r),
    .io_update_alloc                             (tables_4_io_update_alloc_r),
    .io_update_oldCtr                            (tables_4_io_update_oldCtr_r),
    .io_update_uValid                            (tables_4_io_update_uValid_r),
    .io_update_u                                 (tables_4_io_update_u_r),
    .io_update_reset_u                           (tables_4_io_update_reset_u_REG),
    .io_update_target                            (tables_4_io_update_target_r),
    .io_update_old_target                        (tables_4_io_update_old_target_r)
  );
  assign io_out_s2_full_pred_0_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_0;
  assign io_out_s2_full_pred_0_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_1;
  assign io_out_s2_full_pred_0_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_0;
  assign io_out_s2_full_pred_0_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_1;
  assign io_out_s2_full_pred_0_targets_0 = io_in_bits_resp_in_0_s2_full_pred_0_targets_0;
  assign io_out_s2_full_pred_0_targets_1 = io_in_bits_resp_in_0_s2_full_pred_0_targets_1;
  assign io_out_s2_full_pred_0_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_0_jalr_target;
  assign io_out_s2_full_pred_0_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_0_offsets_0;
  assign io_out_s2_full_pred_0_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_0_offsets_1;
  assign io_out_s2_full_pred_0_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_0_fallThroughAddr;
  assign io_out_s2_full_pred_0_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_0_is_br_sharing;
  assign io_out_s2_full_pred_0_hit = io_in_bits_resp_in_0_s2_full_pred_0_hit;
  assign io_out_s2_full_pred_1_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_0;
  assign io_out_s2_full_pred_1_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_1;
  assign io_out_s2_full_pred_1_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_0;
  assign io_out_s2_full_pred_1_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_1;
  assign io_out_s2_full_pred_1_targets_0 = io_in_bits_resp_in_0_s2_full_pred_1_targets_0;
  assign io_out_s2_full_pred_1_targets_1 = io_in_bits_resp_in_0_s2_full_pred_1_targets_1;
  assign io_out_s2_full_pred_1_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_1_jalr_target;
  assign io_out_s2_full_pred_1_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_1_offsets_0;
  assign io_out_s2_full_pred_1_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_1_offsets_1;
  assign io_out_s2_full_pred_1_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_1_fallThroughAddr;
  assign io_out_s2_full_pred_1_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_1_is_br_sharing;
  assign io_out_s2_full_pred_1_hit = io_in_bits_resp_in_0_s2_full_pred_1_hit;
  assign io_out_s2_full_pred_2_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_0;
  assign io_out_s2_full_pred_2_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_1;
  assign io_out_s2_full_pred_2_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_0;
  assign io_out_s2_full_pred_2_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_1;
  assign io_out_s2_full_pred_2_targets_0 = io_in_bits_resp_in_0_s2_full_pred_2_targets_0;
  assign io_out_s2_full_pred_2_targets_1 = io_in_bits_resp_in_0_s2_full_pred_2_targets_1;
  assign io_out_s2_full_pred_2_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_2_jalr_target;
  assign io_out_s2_full_pred_2_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_2_offsets_0;
  assign io_out_s2_full_pred_2_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_2_offsets_1;
  assign io_out_s2_full_pred_2_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_2_fallThroughAddr;
  assign io_out_s2_full_pred_2_is_jalr = io_in_bits_resp_in_0_s2_full_pred_2_is_jalr;
  assign io_out_s2_full_pred_2_is_call = io_in_bits_resp_in_0_s2_full_pred_2_is_call;
  assign io_out_s2_full_pred_2_is_ret = io_in_bits_resp_in_0_s2_full_pred_2_is_ret;
  assign io_out_s2_full_pred_2_last_may_be_rvi_call =
    io_in_bits_resp_in_0_s2_full_pred_2_last_may_be_rvi_call;
  assign io_out_s2_full_pred_2_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_2_is_br_sharing;
  assign io_out_s2_full_pred_2_hit = io_in_bits_resp_in_0_s2_full_pred_2_hit;
  assign io_out_s2_full_pred_3_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_0;
  assign io_out_s2_full_pred_3_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_1;
  assign io_out_s2_full_pred_3_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_0;
  assign io_out_s2_full_pred_3_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_1;
  assign io_out_s2_full_pred_3_targets_0 = io_in_bits_resp_in_0_s2_full_pred_3_targets_0;
  assign io_out_s2_full_pred_3_targets_1 = io_in_bits_resp_in_0_s2_full_pred_3_targets_1;
  assign io_out_s2_full_pred_3_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_3_jalr_target;
  assign io_out_s2_full_pred_3_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_3_offsets_0;
  assign io_out_s2_full_pred_3_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_3_offsets_1;
  assign io_out_s2_full_pred_3_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_3_fallThroughAddr;
  assign io_out_s2_full_pred_3_fallThroughErr =
    io_in_bits_resp_in_0_s2_full_pred_3_fallThroughErr;
  assign io_out_s2_full_pred_3_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_3_is_br_sharing;
  assign io_out_s2_full_pred_3_hit = io_in_bits_resp_in_0_s2_full_pred_3_hit;
  assign io_out_s3_full_pred_0_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_0;
  assign io_out_s3_full_pred_0_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_1;
  assign io_out_s3_full_pred_0_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_0;
  assign io_out_s3_full_pred_0_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_1;
  assign io_out_s3_full_pred_0_targets_0 = io_in_bits_resp_in_0_s3_full_pred_0_targets_0;
  assign io_out_s3_full_pred_0_targets_1 = io_in_bits_resp_in_0_s3_full_pred_0_targets_1;
  assign io_out_s3_full_pred_0_jalr_target =
    s3_tageTaken_dup_0
      ? s3_tageTarget_dup_0
      : io_in_bits_resp_in_0_s3_full_pred_0_jalr_target;
  assign io_out_s3_full_pred_0_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_0_fallThroughAddr;
  assign io_out_s3_full_pred_0_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_0_fallThroughErr;
  assign io_out_s3_full_pred_0_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_0_is_br_sharing;
  assign io_out_s3_full_pred_0_hit = io_in_bits_resp_in_0_s3_full_pred_0_hit;
  assign io_out_s3_full_pred_1_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_0;
  assign io_out_s3_full_pred_1_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_1;
  assign io_out_s3_full_pred_1_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_0;
  assign io_out_s3_full_pred_1_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_1;
  assign io_out_s3_full_pred_1_targets_0 = io_in_bits_resp_in_0_s3_full_pred_1_targets_0;
  assign io_out_s3_full_pred_1_targets_1 = io_in_bits_resp_in_0_s3_full_pred_1_targets_1;
  assign io_out_s3_full_pred_1_jalr_target =
    s3_tageTaken_dup_1
      ? s3_tageTarget_dup_1
      : io_in_bits_resp_in_0_s3_full_pred_1_jalr_target;
  assign io_out_s3_full_pred_1_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_1_fallThroughAddr;
  assign io_out_s3_full_pred_1_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_1_fallThroughErr;
  assign io_out_s3_full_pred_1_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_1_is_br_sharing;
  assign io_out_s3_full_pred_1_hit = io_in_bits_resp_in_0_s3_full_pred_1_hit;
  assign io_out_s3_full_pred_2_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_0;
  assign io_out_s3_full_pred_2_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_1;
  assign io_out_s3_full_pred_2_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_0;
  assign io_out_s3_full_pred_2_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_1;
  assign io_out_s3_full_pred_2_targets_0 = io_in_bits_resp_in_0_s3_full_pred_2_targets_0;
  assign io_out_s3_full_pred_2_targets_1 = io_in_bits_resp_in_0_s3_full_pred_2_targets_1;
  assign io_out_s3_full_pred_2_jalr_target =
    s3_tageTaken_dup_2
      ? s3_tageTarget_dup_2
      : io_in_bits_resp_in_0_s3_full_pred_2_jalr_target;
  assign io_out_s3_full_pred_2_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_2_fallThroughAddr;
  assign io_out_s3_full_pred_2_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_2_fallThroughErr;
  assign io_out_s3_full_pred_2_is_jalr = io_in_bits_resp_in_0_s3_full_pred_2_is_jalr;
  assign io_out_s3_full_pred_2_is_call = io_in_bits_resp_in_0_s3_full_pred_2_is_call;
  assign io_out_s3_full_pred_2_is_ret = io_in_bits_resp_in_0_s3_full_pred_2_is_ret;
  assign io_out_s3_full_pred_2_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_2_is_br_sharing;
  assign io_out_s3_full_pred_2_hit = io_in_bits_resp_in_0_s3_full_pred_2_hit;
  assign io_out_s3_full_pred_3_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_0;
  assign io_out_s3_full_pred_3_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_1;
  assign io_out_s3_full_pred_3_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_0;
  assign io_out_s3_full_pred_3_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_1;
  assign io_out_s3_full_pred_3_targets_0 = io_in_bits_resp_in_0_s3_full_pred_3_targets_0;
  assign io_out_s3_full_pred_3_targets_1 = io_in_bits_resp_in_0_s3_full_pred_3_targets_1;
  assign io_out_s3_full_pred_3_jalr_target =
    s3_tageTaken_dup_3
      ? s3_tageTarget_dup_3
      : io_in_bits_resp_in_0_s3_full_pred_3_jalr_target;
  assign io_out_s3_full_pred_3_offsets_0 = io_in_bits_resp_in_0_s3_full_pred_3_offsets_0;
  assign io_out_s3_full_pred_3_offsets_1 = io_in_bits_resp_in_0_s3_full_pred_3_offsets_1;
  assign io_out_s3_full_pred_3_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_3_fallThroughAddr;
  assign io_out_s3_full_pred_3_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_3_fallThroughErr;
  assign io_out_s3_full_pred_3_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_3_is_br_sharing;
  assign io_out_s3_full_pred_3_hit = io_in_bits_resp_in_0_s3_full_pred_3_hit;
  assign io_out_last_stage_meta =
    {122'h0,
     s3_provided,
     s3_provider,
     s3_altProvided,
     s3_altProvider,
     resp_meta_altDiffers,
     s3_providerU,
     s3_providerCtr,
     s3_altProviderCtr,
     resp_meta_allocate_valid_r,
     resp_meta_allocate_bits_r,
     s3_tageTaken_dup_3,
     s3_providerTarget,
     s3_altProviderTarget};
  assign io_out_last_stage_ftb_entry_valid =
    io_in_bits_resp_in_0_last_stage_ftb_entry_valid;
  assign io_out_last_stage_ftb_entry_brSlots_0_offset =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_offset;
  assign io_out_last_stage_ftb_entry_brSlots_0_lower =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_lower;
  assign io_out_last_stage_ftb_entry_brSlots_0_tarStat =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_tarStat;
  assign io_out_last_stage_ftb_entry_brSlots_0_sharing =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_sharing;
  assign io_out_last_stage_ftb_entry_brSlots_0_valid =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_valid;
  assign io_out_last_stage_ftb_entry_tailSlot_offset =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_offset;
  assign io_out_last_stage_ftb_entry_tailSlot_lower =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_lower;
  assign io_out_last_stage_ftb_entry_tailSlot_tarStat =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_tarStat;
  assign io_out_last_stage_ftb_entry_tailSlot_sharing =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_sharing;
  assign io_out_last_stage_ftb_entry_tailSlot_valid =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_valid;
  assign io_out_last_stage_ftb_entry_pftAddr =
    io_in_bits_resp_in_0_last_stage_ftb_entry_pftAddr;
  assign io_out_last_stage_ftb_entry_carry =
    io_in_bits_resp_in_0_last_stage_ftb_entry_carry;
  assign io_out_last_stage_ftb_entry_isCall =
    io_in_bits_resp_in_0_last_stage_ftb_entry_isCall;
  assign io_out_last_stage_ftb_entry_isRet =
    io_in_bits_resp_in_0_last_stage_ftb_entry_isRet;
  assign io_out_last_stage_ftb_entry_isJalr =
    io_in_bits_resp_in_0_last_stage_ftb_entry_isJalr;
  assign io_out_last_stage_ftb_entry_last_may_be_rvi_call =
    io_in_bits_resp_in_0_last_stage_ftb_entry_last_may_be_rvi_call;
  assign io_out_last_stage_ftb_entry_always_taken_0 =
    io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_0;
  assign io_out_last_stage_ftb_entry_always_taken_1 =
    io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_1;
endmodule

